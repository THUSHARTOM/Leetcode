# Definition for singly-linked list.
import time


class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = None
        
class Solution:
    def mergeTwoLists(self, list1: ListNode, list2: ListNode) -> ListNode:
        dummy = ListNode()
        tail = dummy
        
        curr1 = list1
        curr2 = list2
       
        while curr1 and curr2:
            if curr1.val<curr2.val:
                tail.next = curr1
                print("curr1", curr1.val)
                curr1 = curr1.next
            else:
                tail.next = curr2
                print("curr2", curr2.val)
                curr2 = curr2.next
            
            
            tail = tail.next
        
            
        if curr1:
            tail.next = curr1
            print("-----------------------------l1------------------------------")
        elif curr2:
            tail.next = curr2
            print("-----------------------------l2------------------------------")

        return dummy.next
            
            
l1 = ListNode(1)
b = ListNode(2)
c = ListNode(5)

l2 = ListNode(3)
e = ListNode(4)
f = ListNode(6)

l1.next = b
b.next = c

l2.next = e
e.next = f

sl = Solution()
final = sl.mergeTwoLists(l1,l2)
while final!=None:
    print(final.val)
    final = final.next

        